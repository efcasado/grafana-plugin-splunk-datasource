function npm() {
    DOCKER_IMAGE=node
    DOCKER_RUN_OPTS="--rm -v ${PWD}:${PWD} -w ${PWD} -e npm_config_cache=${PWD}/.npm -e npm_config_prefix=${PWD} -e YARN_CACHE_FOLDER=${PWD}/.cache/yarn -e GITHUB_TOKEN"
    if [ -n "$ZSH_VERSION" ]; then
        docker run ${=DOCKER_RUN_OPTS} --entrypoint=npm ${DOCKER_IMAGE} "$@"
    else
        docker run ${DOCKER_RUN_OPTS} --entrypoint=npm ${DOCKER_IMAGE} "$@"
    fi
}

function npx() {
    DOCKER_IMAGE=node
    DOCKER_RUN_OPTS="--rm -v ${PWD}:${PWD} -w ${PWD} -e npm_config_cache=${PWD}/.npm -e npm_config_prefix=${PWD} -e YARN_CACHE_FOLDER=${PWD}/.cache/yarn -e GITHUB_TOKEN"

    if [ -n "$ZSH_VERSION" ]; then
        docker run ${=DOCKER_RUN_OPTS} --entrypoint=npx ${DOCKER_IMAGE} "$@"
    else
        docker run ${DOCKER_RUN_OPTS} --entrypoint=npx ${DOCKER_IMAGE} "$@"
    fi
}

function yarn() {
    DOCKER_IMAGE=node
    DOCKER_RUN_OPTS="--rm -v ${PWD}:${PWD} -w ${PWD} -e NODE_OPTIONS=--openssl-legacy-provider -e npm_config_cache=${PWD}/.npm -e npm_config_prefix=${PWD}/.npm -e YARN_CACHE_FOLDER=${PWD}/.cache/yarn -e GITHUB_TOKEN"
    if [ -n "$ZSH_VERSION" ]; then
        docker run ${=DOCKER_RUN_OPTS} --entrypoint=yarn ${DOCKER_IMAGE} "$@"
    else
        docker run ${DOCKER_RUN_OPTS} --entrypoint=yarn ${DOCKER_IMAGE} "$@"
    fi
}

function go() {
    DOCKER_IMAGE=go
    DOCKER_RUN_OPTS="--rm -v ${PWD}:${PWD} -w ${PWD} -e GOPATH=${PWD}/go"
    if [ -n "$ZSH_VERSION" ]; then
        docker run ${=DOCKER_RUN_OPTS} ${DOCKER_IMAGE} go "$@"
    else
        docker run ${DOCKER_RUN_OPTS} ${DOCKER_IMAGE} go "$@"
    fi
}

function mage() {
    DOCKER_IMAGE=go
    DOCKER_RUN_OPTS="--rm -v ${PWD}:${PWD} -w ${PWD} -e GOPATH=${PWD}/go"
    if [ -n "$ZSH_VERSION" ]; then
        docker run ${=DOCKER_RUN_OPTS} ${DOCKER_IMAGE} mage "$@"
    else
        docker run ${DOCKER_RUN_OPTS} ${DOCKER_IMAGE} mage "$@"
    fi
}
